#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class BagsQuiz {
public:
	int checkIfProper(int n, vector <string> actions) {
	    int i,j,b1,b2,ret=0;
	    char op[10];
        int bags[55];
        for(i=1;i<=n;i++)
            bags[i]=0;
        for(i=0;i<actions.size();i++){
            sscanf(actions[i].c_str(),"%s",op);
            if((string)op=="PUT"){
                sscanf(actions[i].c_str(),"%s%d%s%d",op,&b1,op,&b2);
                if(bags[b1]!=0 || bags[b2]!=0)
                    return -1;
                bags[b1]=b2;
            }else if((string)op=="SET"){
                sscanf(actions[i].c_str(),"%s%d",op,&b1);
                if(bags[b1]!=0)
                    return -1;
                for(j=1;j<=n;j++)
                    if(bags[j]==b1)
                        bags[j]=0;
            }else{
                sscanf(actions[i].c_str(),"%s%d%s%d",op,&b1,op,&b2);
                if(bags[b1]!=0 || bags[b2]!=0)
                    return -1;
                for(j=1;j<=n;j++){
                    if(bags[j]==b1)
                        bags[j]=b2;
                    else if(bags[j]==b2)
                        bags[j]=b1;
                }
            }
        }
        for(j=1;j<=n;j++){
            if(bags[j]<j && bags[j]!=0)
                return -1;
            if(bags[j]==0)
                ret++;
        }
        return ret;
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, int p0, vector <string> p1, bool hasAnswer, int p2) {
	cout << "Test " << testNum << ": [" << p0 << "," << "{";
	for (int i = 0; int(p1.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p1[i] << "\"";
	}
	cout << "}";
	cout << "]" << endl;
	BagsQuiz *obj;
	int answer;
	obj = new BagsQuiz();
	clock_t startTime = clock();
	answer = obj->checkIfProper(p0, p1);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p2 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p2;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	int p0;
	vector <string> p1;
	int p2;

	{
	// ----- test 0 -----
	p0 = 2;
	string t1[] = {"PUT 1 INSIDE 2"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	p2 = 1;
	all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
	// ------------------
	}

	{
	// ----- test 1 -----
	p0 = 2;
	string t1[] = {"PUT 1 INSIDE 2","SET 2 LOOSE"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	p2 = 2;
	all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
	// ------------------
	}

	{
	// ----- test 2 -----
	p0 = 2;
	string t1[] = {"PUT 2 INSIDE 1"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	p2 = -1;
	all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
	// ------------------
	}

	{
	// ----- test 3 -----
	p0 = 4;
	string t1[] = {"PUT 3 INSIDE 2","SWAP 4 WITH 2","PUT 2 INSIDE 4","SET 1 LOOSE"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	p2 = 2;
	all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
	// ------------------
	}

	{
	// ----- test 4 -----
	p0 = 3;
	string t1[] = {"PUT 1 INSIDE 2","PUT 3 INSIDE 1"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	p2 = -1;
	all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
	// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
